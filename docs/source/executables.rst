Executables
===========

``xsec_analyzer`` provides several binaries that guide the workflow for the
framework. The sources for these are compiled from :file:`src/app/`.

The configuration of input files and their properties is provided in a
declarative manner, the formats of these files are provided in
:doc:`configuration-files`.

.. _exec-processntuples:

``ProcessNTuples``
------------------

``ProcessNTuples`` takes an input PeLEE ntuple, processes it through a chosen
selection, and then produces a new ntuple with an ``stv_tree`` TTree containing
selection values and kinematic variables.

:Source: :file:`src/app/ProcessNTuples.C`

Usage
^^^^^

.. code-block::

   ProcessNTuples INPUT_PELEE_NTUPLE_FILE FILE_TYPE SELECTION_NAMES OUTPUT_FILE

.. program:: ProcessNTuples

.. option:: INPUT_PELEE_NTUPLE_FILE

   A path to the PeLEE ntuple to be processed.

.. option:: FILE_TYPE

   The type of the input file. One of:

   ``nueMC`` or ``nueDV``
      Represents an `intrinsic` sample containing :math:`\nu_e` interactions.
      Skips non-:math:`\nu_e` events to avoid double-counting as part of a full
      selection.

   ``numuMC``
      Represents an `intrinsic` sample containing :math:`\nu_\mu` interactions.
      Skips non-:math:`\nu_\mu` events to avoid double-counting as part of a
      full selection.

   ``dirtMC``
      When :cpp:var:`useNuMI` is ``true``, sets the sample's event weights to
      0.65 in accordance with NuMI dirt weighting procedures.
      When :cpp:var:`useNuMI` is ``false``, this has no effect.

   ``other``
      Any other value chosen has no special effect.
      All present events are processed and have a base weighting of ``1.0``.

.. option:: SELECTION_NAMES

   One or more selections that have:

   - A header file (``.hh``) in: :file:`include/XSecAnalyzer/Selections/`
   - An implementation file (``.cxx``) in :file:`src/selections/`
   - And have been added to :cpp:expr:`SelectionFactory` in
     :file:`src/selections/SelectionFactory.cxx`

   Multiple selections can be processed by passing ``NAME1,NAME2,...``.

.. option:: OUTPUT_FILE

   A path to where the output processed ntuple should be written.

.. _exec-binscheme:

``BinScheme``
-------------

``BinScheme`` takes a histogram binning scheme defined in a header and
implementation source file. It aides the binning process by printing response
matrices and allows a binning configuration file to be outputted.

Running this program is optional but it takes the tedium out of writing a bin
scheme configuration file by hand.

:Source: :file:`src/app/binscheme.C`

Usage
^^^^^

.. code-block::

   BinScheme [options] BIN_SCHEME_NAME

.. program:: binscheme

.. option:: BIN_SCHEME_NAME

   A binning scheme name that has:

   - A header file in: :file:`include/XSecAnalyzer/Binning`.
   - An implementation file in: :file:`src/binning/`.
   - And has been added to :cpp:expr:`BinSchemeFactory` in
     :file:`src/binning/BinSchemeFactory.cxx`.

.. option:: -h, --help

   Prints the usage for the program.

.. option:: -s, --save

   Save binning scheme to a configuration text file. This can be fed into
   latter stages of the framework.

.. option:: -c, --config

   Plot/print a response matrix, facilitating binning schemes.

``univmake``
------------

.. attention::

   This program has not been documented here yet. Please see the source file.

:Source: :file:`src/app/univmake.C`

Usage
^^^^^

.. code-block::

   univmake LIST_FILE UNIVMAKE_CONFIG_FILE OUTPUT_ROOT_FILE [FILE_PROPERTIES_CONFIG_FILE]

.. program:: univmake

.. option:: LIST_FILE

   A newline delimited list of paths to ``stv-tree`` ntuple files.

   Instead, a :ref:`config-file-properties` file can be used here and only the
   first item on each line will be used as the file path.

.. option:: UNIVMAKE_CONFIG_FILE

   A file defining the binning scheme for each kinematic variable. Defined by
   :ref:`config-bin-config`. This file can also be generated by BinScheme.

.. option:: OUTPUT_ROOT_FILE

   The path to where the output file from this program should be created.

.. option:: FILE_PROPERTIES_CONFIG_FILE

   A file matching :ref:`config-file-properties`. This particular argument uses
   all information present in that file.

``SlicePlots``
--------------

This program takes the prepared sample files and their systematic universe
variations from ``univmake`` in addition to the kinematic variable bin
configuration file. It produces several plots of the distributions of kinematic
variables as defined in ``SLICE_Config``, placing them into the folder given by
``Plot_OutputDir``.

:Source: :file:`src/app/Slice_Plots.C`

Usage
^^^^^

.. code-block::

   SlicePlots FPM_CONFIG SYST_Config SLICE_Config Univ_Output Plot_OutputDir

.. program:: SlicePlots

.. option:: FPM_CONFIG

   A path to a :ref:`config-file-properties` configuration file.

.. option:: SYST_Config

   A file describing the systematic variations used by SlicePlots.

.. option:: SLICE_Config

   A file describing the binning configuration for all kinematic variables.

.. option:: Univ_Output

   The location of the output file containing the systematic universes created
   by ``univmake``.

.. option:: Plot_OutputDir

   The output directory for where produced plots will be saved.


``Unfolder``
------------

.. attention::

   This program has not been fully documented here yet. Please see the source
   file.

:Source: :file:`src/app/Unfolder.C`

Usage
^^^^^

.. code-block::

   Unfolder XSEC_CONFIG SLICE_CONFIG OUTPUT_FILE

.. program:: Unfolder

.. option:: XSEC_CONFIG

   ...

.. option:: SLICE_CONFIG

   ...

.. option:: OUTPUT_FILE

   ...


Auxiliary Programs
------------------

.. _exec-addfakeweights:

``AddFakeWeights``
^^^^^^^^^^^^^^^^^^

``AddFakeWeights`` takes a NuMI PeLEE dirt file with a partial set of
systematic weights, a PelEE ntuple file with a full set of systematic weights,
and an output file name.

Usage
.....

.. code-block::

   AddFakeWeights INPUT_FILE INPUT_FULL_WEIGHTS_FILE OUTPUT_FILE

.. program:: AddFakeWeights

.. option:: INPUT_FILE

   A PeLEE ntuple file that contains a partial set of systematic weights.

   This is intended to be a NuMI dirt file.

.. option:: INPUT_FULL_WEIGHTS_FILE

   A PeLEE ntuple file that contains a full set of systematic weights to be
   used as a template for adding missing weights.

.. option:: OUTPUT_FILE

   The file to be outputted with a full set of systematic weights.
